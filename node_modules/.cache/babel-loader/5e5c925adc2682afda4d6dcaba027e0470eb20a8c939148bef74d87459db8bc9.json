{"ast":null,"code":"var _jsxFileName = \"/Users/ssmac/React/myfirst_reactapp/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n//useState is called \"hook\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"2\"); //this is main - initialize a variable and function and set initial state\n  //to update text, you have to mandatory call setText    \n  const handleUpClick = () => {\n    setText(\"You have clicked on handleUpClick\");\n  };\n  const handleOnChange = event => {\n    console.log(event.target.value);\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myText\",\n        className: \"form-label\",\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"myBox\",\n        rows: \"9\",\n        placeholder: \"name@example.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpClick,\n      children: \"Convert to Upper Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(TextForm, \"hClUPIhikD8cka3dahYiglFbuco=\");\n_c = TextForm;\nTextForm.propTypes = {\n  title: PropTypes.string.isRequired\n};\nTextForm.defaultProps = {\n  heading: \"Enter Text Here\"\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","TextForm","props","_s","text","setText","handleUpClick","handleOnChange","event","console","log","target","value","children","className","htmlFor","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","placeholder","onClick","_c","propTypes","title","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/Users/ssmac/React/myfirst_reactapp/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n//useState is called \"hook\"\n\nexport default function TextForm(props) {\n    const [text, setText] = useState(\"2\"); //this is main - initialize a variable and function and set initial state\n    //to update text, you have to mandatory call setText    \n    const handleUpClick = ()=>{\n        setText(\"You have clicked on handleUpClick\");\n    }\n    const handleOnChange = (event)=>{\n        console.log(event.target.value);\n        setText(event.target.value);\n    }\n  return (\n    <div>\n        <div className=\"mb-3\">\n            <label htmlFor=\"myText\" className=\"form-label\">{props.heading}</label>\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"9\" placeholder=\"name@example.com\"/>\n        </div>\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Upper Case</button>            \n    </div>\n  )\n}\n\nTextForm.propTypes = { title : PropTypes.string.isRequired,\n                     }\nTextForm.defaultProps = {\n  heading : \"Enter Text Here\",\n}   "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,YAAY;AAClC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACvC;EACA,MAAMS,aAAa,GAAGA,CAAA,KAAI;IACtBD,OAAO,CAAC,mCAAmC,CAAC;EAChD,CAAC;EACD,MAAME,cAAc,GAAIC,KAAK,IAAG;IAC5BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC/BP,OAAO,CAACG,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACH,oBACEZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAKc,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBb,OAAA;QAAOe,OAAO,EAAC,QAAQ;QAACD,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAEX,KAAK,CAACc;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtEpB,OAAA;QAAUc,SAAS,EAAC,cAAc;QAACF,KAAK,EAAER,IAAK;QAACiB,QAAQ,EAAEd,cAAe;QAACe,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC,GAAG;QAACC,WAAW,EAAC;MAAkB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7H,CAAC,eACNpB,OAAA;MAAQc,SAAS,EAAC,iBAAiB;MAACW,OAAO,EAAEnB,aAAc;MAAAO,QAAA,EAAC;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAEV;AAACjB,EAAA,CAnBuBF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAqBhCA,QAAQ,CAAC0B,SAAS,GAAG;EAAEC,KAAK,EAAG9B,SAAS,CAAC+B,MAAM,CAACC;AAC3B,CAAC;AACtB7B,QAAQ,CAAC8B,YAAY,GAAG;EACtBf,OAAO,EAAG;AACZ,CAAC;AAAA,IAAAU,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}