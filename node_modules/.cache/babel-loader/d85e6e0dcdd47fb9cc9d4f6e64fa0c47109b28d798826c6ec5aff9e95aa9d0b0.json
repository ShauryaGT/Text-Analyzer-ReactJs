{"ast":null,"code":"var _jsxFileName = \"/Users/ssmac/React/myfirst_reactapp/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet alertid = 0;\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const changeMode = () => {\n    if (mode == \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      showAlert(\"Light Mode set.\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark Mode set.\");\n    }\n  };\n  const [alert, setAlert] = useState([]);\n  let showAlert = mes => {\n    setAlert([{\n      message: mes + alertid.toString(),\n      id: alertid\n    }, ...alert]);\n    alertid++;\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Analytics\",\n        changeMode: changeMode,\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        message: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter the Text to analyse below\",\n            mode: mode,\n            setalert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kEmA2OhUYsamt6xsUZdHz+cMaqE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","TextForm","About","React","useState","BrowserRouter","Router","Routes","Route","Link","Alert","jsxDEV","_jsxDEV","alertid","App","_s","mode","setMode","changeMode","document","body","style","backgroundColor","showAlert","alert","setAlert","mes","message","toString","id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","heading","setalert","_c","$RefreshReg$"],"sources":["/Users/ssmac/React/myfirst_reactapp/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,  \n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Alert from './components/Alert';\n\nlet alertid = 0;\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const changeMode = () => {\n    if (mode == \"dark\"){\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      showAlert(\"Light Mode set.\");\n    }\n    else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark Mode set.\");\n    }    \n  };  \n  const [alert, setAlert] = useState([]);\n  let showAlert = (mes) => {\n    setAlert([{\n      message : (mes + alertid.toString()),\n      id : alertid\n    }, ...alert]);\n    alertid++;\n  };\n  return (    \n    <Router>\n      <div>\n        <Navbar title=\"Text Analytics\" changeMode={changeMode} mode={mode}/>     \n        {/* <div className=\"container my-3\">\n          <About mode={mode}/>\n        </div> */}        \n        <Alert message={alert}/>\n        <Routes> \n          <Route exact path='/' element={< TextForm heading=\"Enter the Text to analyse below\" mode={mode} setalert={showAlert}/>}></Route> \n          <Route exact path='/about' element={< About mode={mode}/>}></Route> \n        </Routes>\n        {/* <div className=\"container my-3\">                     \n          <TextForm heading=\"Enter the Text to analyse below\" mode={mode}/>\n        </div> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}